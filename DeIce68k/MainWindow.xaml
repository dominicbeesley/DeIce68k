<Window x:Class="DeIce68k.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DeIce68k"
        xmlns:sampledata="clr-namespace:DeIce68k.SampleData"
        xmlns:viewmodel="clr-namespace:DeIce68k.ViewModel"
        mc:Ignorable="d"
        Title="MainWindow" 
        Height="450" 
        Width="800" 
        Closed="Window_Closed" 
        Loaded="Window_Loaded"
        d:DataContext="{x:Static sampledata:DesignTimeSampleData.SampleDeIceAppModel }"
        >
    <!-- look at https://www.codeproject.com/Articles/101881/Executing-Command-Logic-in-a-View-Model -->
    <Window.Resources>
        <viewmodel:TargetStatusByte_ValueConverter x:Key="tsvalconv" />
    </Window.Resources>


    <DockPanel>
        <StackPanel DockPanel.Dock="Top">
            <Menu>
                <MenuItem Header="_Debug">
                    <MenuItem Command="{Binding CmdNext }" Header="Next" />
                    <MenuItem Command="{Binding CmdCont }" Header="Continue" />
                    <MenuItem Command="{Binding CmdTraceTo }" Header="Trace To..." />
                    <MenuItem Command="{Binding CmdStop}" Header="STOP" />
                    <MenuItem Command="{Binding CmdRefresh}" Header="Refresh" />
                    <MenuItem Command="{Binding CmdDumpMem}" Header="Dump Memory" />
                    <MenuItem Command="{Binding CmdDisassembleAt}" Header="Disassemble At..." />
                </MenuItem>
            </Menu>
            <ToolBarTray>
                <ToolBar>
                    <Button Command="{Binding CmdNext }" Content="Next" />
                    <Button Command="{Binding CmdCont }" Content="Continue" />
                    <Button Command="{Binding CmdTraceTo }" Content="Trace To..." />
                    <Button Command="{Binding CmdStop}" Content="STOP" />
                    <Button Command="{Binding CmdRefresh}" Content="Refresh" />
                    <Button Command="{Binding CmdDumpMem}" Content="Dump Memory" />
                </ToolBar>
            </ToolBarTray>
        </StackPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="64" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Text="{ Binding Regs.TargetStatus, Converter={StaticResource tsvalconv } }" />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="{ Binding DebugHostStatus.TargetName }" />
            </StatusBarItem>
        </StatusBar>

        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="1.8*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" HorizontalAlignment="stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <local:ucRegs Grid.Column="0" 
                              DataContext="{Binding Regs}" 
                              d:DataContext="{x:Static sampledata:DesignTimeSampleData.SampleDataRegisterSetModel }" 
                              />
                <local:ucDisass Grid.Column="1" x:Name="ucDisAss" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DataContext="{Binding DisassMemBlock}" />

                <TabControl Grid.Column="2">
                    <TabItem Header="Watches">
                        <ListBox  x:Name="lbWatches" ItemsSource="{Binding Watches}" d:ItemsSource="{x:Static sampledata:DesignTimeSampleData.SamplesWatches }" >

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="IsSelected" Value="{Binding Selected}"/>
                                </Style>
                            </ListBox.ItemContainerStyle>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="64"  />
                                            <ColumnDefinition Width="*" SharedSizeGroup="N" />
                                            <ColumnDefinition Width="*" SharedSizeGroup="N" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Width>
                                            <Binding Path="ActualWidth" 
                                                        RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}" />
                                        </Grid.Width>
                                        <TextBlock Grid.Column="0" Text="{Binding Path=Address, StringFormat={}{0:X8}}" Width="auto" />
                                        <TextBlock Grid.Column="1" Text="{Binding Path=ValueString}" FontFamily="Lucida Console" FontSize="10" TextWrapping="Wrap"/>
                                        <TextBlock Grid.Column="2" Text="{Binding Path=FullName}" Width="auto" Padding="0 0 10 0" TextWrapping="Wrap"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </TabItem>
                    <TabItem Header="Breakpoints">
                        <ListBox  x:Name="lbBreakpoints" 
                                  ItemsSource="{Binding Breakpoints}" 
                                  d:ItemsSource="{x:Static sampledata:DesignTimeSampleData.SamplesBreakpoints }" 
                                  SelectionMode="Multiple"
                                  
                                  Grid.IsSharedSizeScope="True"
                                  HorizontalAlignment="Stretch" 
                                  >
                            <ListBox.InputBindings>
                                <KeyBinding Key="Delete" Command="{Binding CmdBreakpoints_Delete}" />
                            </ListBox.InputBindings>

                            <ListBox.ContextMenu>
                                <ContextMenu >
                                    <MenuItem Header="Add..." Command="{Binding CmdBreakpoints_Add}" />
                                    <MenuItem Header="Delete..." Command="{Binding CmdBreakpoints_Delete}" InputGestureText="Del" />
                                </ContextMenu>
                            </ListBox.ContextMenu>

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="IsSelected" Value="{Binding Selected}"/>
                                </Style>
                            </ListBox.ItemContainerStyle>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.RowDefinitions />
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="24" SharedSizeGroup="Enab" />
                                            <ColumnDefinition Width="*" SharedSizeGroup="Address" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Width>
                                            <Binding Path="ActualWidth" 
                                                        RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}" />
                                        </Grid.Width>
                                        <CheckBox Grid.Column="0" IsChecked="{Binding Path=Enabled}" />
                                        <TextBlock Grid.Column="1" Text="{Binding Path=Address, StringFormat={}{0:X8}}" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </TabItem>
                    <TabItem Header="Symbols">
                        <ListBox ItemsSource="{Binding Symbols.SymbolsByAddress}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="64" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Address, StringFormat=X08 }" Grid.Column="0"/>
                                        <ListView Grid.Column="1" ItemsSource="{Binding Symbols}">
                                            
                                            
                                        </ListView>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </TabItem>
                </TabControl>

            </Grid>
            <ListBox Grid.Row="2" Grid.Column="0"
                     VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" 
                     DataContext="{Binding Messages}" 
                     ItemsSource="{Binding .}" 
                     d:DataContext="{d:DesignData /SampleData/SampleMessages.xaml }" 
                     Background="Navy" Loaded="LbMessages_Loaded"
                     x:Name="lbMessages"
                     >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBox 
                            Text="{Binding Path=.}" 
                            Margin="0" Padding="2" 
                            Background="Black" Foreground="#008000" 
                            BorderBrush="Black" FontFamily="Lucida Console" 
                            FontSize="10"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
    </DockPanel>
</Window>
